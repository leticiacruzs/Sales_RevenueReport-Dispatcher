<Activity mc:Ignorable="sap sap2010" x:Class="ValidateLastLineVendor" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ExpectedVendorStatus" Type="InArgument(x:String)" />
    <x:Property Name="in_DtVendorList" Type="InArgument(sd:DataTable)" />
    <x:Property Name="io_DictInfosInvoice" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_OrchestratorQueueFolder" Type="InArgument(x:String)" />
    <x:Property Name="in_OrchestratorQueueName" Type="InArgument(x:String)" />
    <x:Property Name="in_VendorId" Type="InArgument(x:String)" />
    <x:Property Name="in_DtReport" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_LastLineVendor" Type="InArgument(x:Boolean)" />
  </x:Members>
  <this:ValidateLastLineVendor.in_LastLineVendor>
    <InArgument x:TypeArguments="x:Boolean" />
  </this:ValidateLastLineVendor.in_LastLineVendor>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ValidateLastLineVendor_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>NPOI.Core</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ValidateLastLineVendor" sap:VirtualizedContainerService.HintSize="759,1716" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="DtFilter" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:IfElseIfV2 Condition="[in_LastLineVendor AndAlso in_DtReport.AsEnumerable().Where(Function(row) row(&quot;VENDOR ID&quot;).ToString.Trim = in_VendorId.Trim AndAlso String.IsNullOrWhiteSpace(row(&quot;Erros encontrados&quot;).ToString)).Any]" DisplayName="Else If" sap:VirtualizedContainerService.HintSize="515,1693" sap2010:WorkflowViewState.IdRef="IfElseIfV2_1">
      <ui:IfElseIfV2.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="513,224" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message Not Last Vendor Row" sap:VirtualizedContainerService.HintSize="479,164" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[String.Format(&quot;Not the last row for the vendor {0} yet. Continuing processing.&quot;, in_VendorId)]" />
        </Sequence>
      </ui:IfElseIfV2.Else>
      <ui:IfElseIfV2.ElseIfs>
        <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
          <ui:IfElseIfBlock BlockType="ElseIf" Condition="[in_LastLineVendor]" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_2">
            <ui:IfElseIfBlock.Then>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="513,224" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message Vendor Last Row Without Items" sap:VirtualizedContainerService.HintSize="479,164" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[String.Format(&quot;Last row for the vendor {0}, but no valid items found to send to the queue.&quot;, in_VendorId)]" />
              </Sequence>
            </ui:IfElseIfBlock.Then>
          </ui:IfElseIfBlock>
        </sc:BindingList>
      </ui:IfElseIfV2.ElseIfs>
      <ui:IfElseIfV2.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="513,1029" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message Vendor Last Row With Items" sap:VirtualizedContainerService.HintSize="479,173" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[String.Format(&quot;Last row for the vendor {0} with items successfully found. Sending to queue.&quot;, in_VendorId)]" />
          <Assign DisplayName="Assign DtFilter" sap:VirtualizedContainerService.HintSize="479,114" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataTable">[DtFilter]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataTable">[in_DtReport.AsEnumerable().Where(Function(row) row("VENDOR ID").ToString.Trim = in_VendorId.Trim AndAlso String.IsNullOrWhiteSpace(row("Erros encontrados").ToString)).CopyToDataTable()]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:MultipleAssign DisplayName="Multiple Assign Name, Number and Email Vendor" sap:VirtualizedContainerService.HintSize="479,210" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Object">[io_DictInfosInvoice("NameVendor")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Object">[in_DtVendorList.AsEnumerable().FirstOrDefault(Function(row) row("Vendor ID").ToString.Trim.Equals(in_VendorId) AndAlso row("Status").ToString.Trim.ToUpper.Equals(in_ExpectedVendorStatus))("Vendor Name").ToString.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Object">[io_DictInfosInvoice("NumberVendor")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Object">[in_DtVendorList.AsEnumerable().FirstOrDefault(Function(row) row("Vendor ID").ToString.Trim.Equals(in_VendorId) AndAlso row("Status").ToString.Trim.ToUpper.Equals(in_ExpectedVendorStatus))("Phone Number").ToString.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Object">[io_DictInfosInvoice("EmailVendor")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Object">[in_DtVendorList.AsEnumerable().FirstOrDefault(Function(row) row("Vendor ID").ToString.Trim.Equals(in_VendorId) AndAlso row("Status").ToString.Trim.ToUpper.Equals(in_ExpectedVendorStatus))("e-Mail").ToString.Trim]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
          <ui:RetryScope DisplayName="Retry Scope - Add Queue Item" sap:VirtualizedContainerService.HintSize="479,472" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:05">
            <ui:RetryScope.ActivityBody>
              <ActivityAction>
                <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item" FolderPath="[in_OrchestratorQueueFolder]" sap:VirtualizedContainerService.HintSize="334,194" sap2010:WorkflowViewState.IdRef="AddQueueItem_2" Priority="Normal" QueueType="[in_OrchestratorQueueName]" Reference="[String.Concat(in_VendorId, &quot; - &quot;, String.Join(&quot;,&quot;, DtFilter.AsEnumerable().Select(Function(row) row(&quot;INVOICE&quot;).ToString.Trim).ToArray()))]">
                  <ui:AddQueueItem.ItemInformation>
                    <InArgument x:TypeArguments="x:String" x:Key="NameVendor">[io_DictInfosInvoice("NameVendor").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="IdVendor">[in_VendorId]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="NumberVendor">[io_DictInfosInvoice("NumberVendor").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="MailVendor">[io_DictInfosInvoice("EmailVendor").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Street">[io_DictInfosInvoice("Street").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="District">[io_DictInfosInvoice("District").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="City">[io_DictInfosInvoice("City").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="State">[io_DictInfosInvoice("State").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Date">[String.Join(",", DtFilter.AsEnumerable().Select(Function(row) row("DATE").ToString.Trim).ToArray())]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="InvoiceNumber">[String.Join(",", DtFilter.AsEnumerable().Select(Function(row) row("INVOICE").ToString.Trim).ToArray())]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ItemType">[String.Join(",", DtFilter.AsEnumerable().Select(Function(row) row("ITEM TYPE").ToString.Trim).ToArray())]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="UnitCostBrl">[String.Join(",", DtFilter.AsEnumerable().Select(Function(row) row("Valor Unitário (BRL)").ToString.Trim).ToArray())]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Qty">[String.Join(",", DtFilter.AsEnumerable().Select(Function(row) row("QTY").ToString.Trim).ToArray())]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="TotalBrl">[String.Join(",", DtFilter.AsEnumerable().Select(Function(row) row("Valor Total (BRL)").ToString.Trim).ToArray())]</InArgument>
                  </ui:AddQueueItem.ItemInformation>
                </ui:AddQueueItem>
              </ActivityAction>
            </ui:RetryScope.ActivityBody>
            <ui:RetryScope.Condition>
              <ActivityFunc x:TypeArguments="x:Boolean" />
            </ui:RetryScope.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:RetryScope>
        </Sequence>
      </ui:IfElseIfV2.Then>
    </ui:IfElseIfV2>
  </Sequence>
</Activity>